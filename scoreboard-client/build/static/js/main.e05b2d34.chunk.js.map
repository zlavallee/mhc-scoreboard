{"version":3,"sources":["constants.js","lib/utils.js","lib/api.js","components/shared/TopNav.jsx","components/shared/CenterHeader.jsx","components/shared/LargeNumberInput.jsx","components/hurling/HurlingTeam.jsx","components/hurling/Quarter.jsx","components/shared/AppAlert.jsx","components/hurling/HurlingTimer.jsx","pages/HurlingScoreboard.jsx","pages/PageNotFound.jsx","pages/Help.jsx","pages/Root.jsx","App.jsx","serviceWorker.js","index.js"],"names":["apiBase","constants","mhcLogo","api","scoreboard","concat","timer","timerStart","timerStop","clear","reset","status","mapScoreStringToInt","score","transformScoreValues","value","undefined","parseInt","transform","home","points","goals","total","visitor","quarter","calculateScore","createFullScore","Object","objectSpread","calculateSeconds","totalSeconds","Math","floor","calculateMinutes","calculateMilliSeconds","minutes","seconds","epochTimeNs","Date","now","nsToMillis","ns","round","getOrDefault","defaultValue","config","headers","Content-Type","getState","_callee","_yield$axios$get","data","regenerator_default","a","wrap","_context","prev","next","console","log","axios","get","_this","sent","abrupt","stop","setState","_callee2","_yield$axios$post","_context2","post","toString","getTimer","_callee3","_yield$axios$get2","_context3","setTimer","_callee4","_yield$axios$post2","_context4","startTimer","_callee5","_yield$axios$post3","_context5","stopTimer","_callee6","_yield$axios$post4","_context6","_callee7","_yield$axios$post5","_context7","TopNav","props","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","then","window","location","reload","react_default","createElement","className","Navbar","color","light","expand","NavbarBrand","src","width","height","alt","NavbarToggler","onClick","Nav","navbar","NavItem","Button","title","newGame","clearScoreboard","React","Component","style","textAlign","CenterHeader","importance","name","LargeNumberInput","getCount","isNaN","count","setCount","emitCountChange","onCountChange","label","FormButton","edit","Input","bsSize","type","placeholder","readOnly","onChange","e","target","HurlingTeam","onScoreChange","Row","Col","xs","lg","LargeNumberInput_LargeNumberInput","updatedGoals","updatedPoints","Quarter","updatedQuarter","onQuarterChange","AppAlert","_useState","useState","_useState2","slicedToArray","visible","setVisible","Alert","onDismiss","message","HurlingTimer","mounted","useRef","intervalRef","totalMilliSeconds","running","updateTimer","_useState3","_useState4","updateEdit","_useState5","_useState6","initialized","updateInitialized","useEffect","current","timerState","updateTimerFromState","startInterval","removeInterval","onClickSave","_ref","asyncToGenerator","mark","apply","arguments","onClickStop","_ref2","onClickStart","_ref3","onClickReset","_ref4","setInterval","incrementMilliSecond","newTotalMilliSeconds","updateTotal","interval","clearInterval","debug","TimerState","calculateTotalMillis","getRunning","disabled","md","xl","offset","start_time","getOffset","totalNs","getStartTime","totalMillis","HurlingScoreboard","alertLevels","emptyScore","homeScore","updateHomeScore","visitorScore","updateVisitorScore","updateQuarter","_useState7","_useState8","alert","setAlert","_useState9","_useState10","setStatus","_useState11","_useState12","loading","setLoading","statusData","isInitialized","fetchState","result","updateScoreboard","scoreboardObject","createAlert","t0","error","_x","alertData","indexOf","setTimeout","HurlingTimer_HurlingTimer","sm","PageNotFound","Jumbotron","Help","Root","TopNav_TopNav","Container","fluid","react_router","path","component","history","createBrowserHistory","App","Root_Root","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e05b2d34.chunk.js","sourcesContent":["\n//TODO: Do this properly\n// const apiBase = 'http://localhost:5000/api/v1.0'\nconst apiBase = '/api/v1.0'\n\nconst constants = {\n  mhcLogo: './mhc-logo.png',\n  api: {\n    scoreboard: `${apiBase}/scoreboard`,\n    timer: `${apiBase}/timer`,\n    timerStart: `${apiBase}/timer/start`,\n    timerStop: `${apiBase}/timer/stop`,\n    clear: `${apiBase}/clear`,\n    reset: `${apiBase}/reset`,\n    status: `${apiBase}/status`\n  }\n};\n\nexport default constants;\n","export const mapScoreStringToInt = (score) => {\n  return transformScoreValues(score, (value) => {\n    if (value === null || value === undefined) {\n      return 0\n    }\n\n    return parseInt(value)\n  })\n}\n\nexport const mapScoreIntToString = (score) => {\n  return transformScoreValues(score, (value) => {\n    if (value === null || value === undefined) {\n      return \"_\"\n    }\n\n    return value.toString()\n  })\n}\n\nexport const transformScoreValues = (score, transform) => {\n  return {\n    home: {\n      points: transform(score.home.points),\n      goals: transform(score.home.goals),\n      total: transform(score.home.total)\n    },\n    visitor: {\n      points: transform(score.visitor.points),\n      goals: transform(score.visitor.goals),\n      total: transform(score.visitor.total)\n    },\n    quarter: transform(score.quarter)\n  }\n}\n\nexport const calculateScore = (score) => {\n  return score.goals * 3 + score.points\n};\n\nexport const createFullScore = (score) => {\n  return {\n    ...score,\n    total: calculateScore(score)\n  }\n};\n\nexport const calculateSeconds = (totalSeconds) => {\n  return Math.floor(totalSeconds / 1000) % 60;\n};\n\nexport const calculateMinutes = (totalSeconds) => {\n  return Math.floor(totalSeconds / (60 * 1000));\n};\n\nexport const calculateMilliSeconds = (minutes, seconds) => {\n  return minutes * 60 * 1000 + seconds * 1000\n};\n\nexport const epochTimeNs = () => {\n  return Date.now() * 1000000\n}\n\nexport const nsToMillis = (ns) => {\n  return Math.round(ns / 1000000)\n}\n\nexport const getOrDefault = (value, defaultValue) => {\n  if (value === undefined || value === null) {\n    return defaultValue\n  }\n  return value\n}\n\nexport const generateOrDefault = (value, defaultValue) => {\n  if (value === undefined || value === null) {\n    return defaultValue\n  }\n  return value\n}\n","import axios from 'axios';\nimport constants from \"../constants\";\nimport {\n  mapScoreIntToString,\n  mapScoreStringToInt\n} from \"./utils\";\n\nclass ScoreboardApi {\n  config = {\n    headers: {\n      'Content-Type': 'application/json',\n    }\n  };\n\n  getState = async () => {\n    console.log(\"Getting scoreboard state from backend\");\n    const {data} = await axios.get(constants.api.scoreboard, this.config);\n\n    return mapScoreStringToInt(data)\n  };\n\n  setState = async (scoreboard) => {\n    console.log('Setting scoreboard state: ', scoreboard);\n\n    const {data} = await axios.post(constants.api.scoreboard,\n        mapScoreIntToString(scoreboard), this.config);\n\n    return mapScoreStringToInt(data)\n  };\n\n  getTimer = async () => {\n    console.log(\"Getting scoreboard timer state from backend\")\n    const {data} = await axios.get(constants.api.timer, this.config)\n    return data\n  }\n\n  setTimer = async (timer) => {\n    console.log(\"Setting scoreboard timer state from backend\")\n    const {data} = await axios.post(constants.api.timer, timer, this.config)\n    return data\n  }\n\n  startTimer = async () => {\n    console.log(\"Starting scoreboard timer from backend\")\n    const {data} = await axios.post(constants.api.timerStart)\n    return data\n  }\n\n  stopTimer = async () => {\n    console.log(\"Stopping scoreboard timer from backend\")\n    const {data} = await axios.post(constants.api.timerStop)\n    return data\n  }\n\n  reset = () => {\n    return axios.post(constants.api.reset)\n  }\n\n  clear = () => {\n    return axios.post(constants.api.clear)\n  }\n\n  status = async () => {\n    const {data} = await axios.post(constants.api.status)\n    return data\n  }\n}\n\nconst scoreboard = new ScoreboardApi();\n\nexport default scoreboard;\n","import React from 'react';\nimport {\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  Button\n} from 'reactstrap';\nimport constants from \"../../constants\";\nimport scoreboard from \"../../lib/api\";\n\nexport default class TopNav extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false\n    };\n  }\n\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  newGame() {\n    scoreboard.reset().then(() => {\n      window.location.reload()\n    })\n  }\n\n  clearScoreboard() {\n    scoreboard.clear().then(() => {\n      window.location.reload()\n    })\n  }\n\n  render() {\n    return (\n        <div className=\"mb-1\">\n          <Navbar color=\"light\" light expand=\"md\">\n            <NavbarBrand>\n              <img src={constants.mhcLogo} width=\"30\" height=\"30\"\n                   alt=\"MHC Scoreboard\">\n              </img>\n              MHC Scoreboard\n            </NavbarBrand>\n            <NavbarToggler onClick={this.toggle}/>\n            <Nav className=\"mr-auto\" navbar>\n              <NavItem className=\"mr-2\">\n                <Button color=\"warning\" title=\"Reset scoreboard for new game.\" onClick={this.newGame}>New Game</Button>\n              </NavItem>\n              <NavItem>\n                <Button color=\"danger\" title=\"Clear scoreboard of all values\" onClick={this.clearScoreboard}>Clear Scoreboard</Button>\n              </NavItem>\n            </Nav>\n          </Navbar>\n        </div>\n    );\n  }\n}\n","import React from 'react'\n\nconst style = {\n    textAlign: 'center'\n};\n\nexport default function CenterHeader(props) {\n    switch (props.importance) {\n        case 'h1':\n            return (<h1 style={style}>{props.name}</h1>);\n        case 'h2':\n            return (<h2 style={style}>{props.name}</h2>);\n        case 'h3':\n            return (<h3 style={style}>{props.name}</h3>);\n        case 'h4':\n            return (<h4 style={style}>{props.name}</h4>);\n        case 'h5':\n            return (<h5 style={style}>{props.name}</h5>);\n        case 'h6':\n            return (<h6 style={style}>{props.name}</h6>);\n        default:\n            return (<h1 style={style}>{props.name}</h1>);\n    }\n}\n","import React from \"react\";\nimport {Button, Input} from \"reactstrap\";\nimport './LargeNumberInput.scss'\nimport CenterHeader from \"./CenterHeader\";\n\nexport default function LargeNumberInput(props) {\n\n\n  const getDisplayableCount = () => {\n    if (isNaN(props.count)) {\n      return 0\n    }\n\n    return getCount(props.count)\n  }\n\n  const getCount = () => {\n    if (isNaN(props.count)) {\n      return props.count\n    }\n\n    return parseInt(props.count)\n  }\n\n  const incrementCount = () => {\n    setCount(getCount() + 1);\n  };\n\n  const decrementCount = () => {\n    setCount(getCount() - 1);\n  };\n\n  const onChange = (value) => {\n    if (isNaN(value)) {\n      return\n    }\n\n    setCount(parseInt(value))\n  }\n\n  const setCount = (count) => {\n    emitCountChange(count);\n  };\n\n  const emitCountChange = (count) => {\n    if (props.onCountChange) {\n      props.onCountChange(count);\n    }\n  };\n\n  return (\n      <div className=\"large-number-wrapper\">\n        {props.label && <CenterHeader importance=\"h3\" name={props.label}/>}\n        <FormButton onClick={incrementCount} edit={props.edit} label=\"+\"\n                    color=\"primary\"/>\n        <Input\n            className=\"large-input\"\n            bsSize=\"lg\"\n            type=\"number\"\n            name=\"number\"\n            placeholder=\"number placeholder\"\n            value={getDisplayableCount()}\n            readOnly={!props.edit}\n            onChange={(e) => onChange(e.target.value)}\n        />\n        <FormButton onClick={decrementCount} edit={props.edit} label=\"-\"\n                    color=\"dark\"/>\n      </div>\n  )\n}\n\nfunction FormButton(props) {\n  return (\n      <Button\n          color={props.color ? props.color : 'primary'}\n          onClick={props.onClick}\n          className={\"large-input-button \" + (props.edit ? '' : 'hidden')}>\n        {props.label}\n      </Button>\n  )\n}\n","import React from 'react'\nimport {Col, Row} from \"reactstrap\";\nimport LargeNumberInput from \"../shared/LargeNumberInput\";\nimport {calculateScore} from \"../../lib/utils\";\nimport CenterHeader from \"../shared/CenterHeader\";\n\nexport default function HurlingTeam(props) {\n    const goals = props.score.goals;\n    const points = props.score.points;\n\n    const onGoalsChange = (updatedGoals) => {\n        onScoreChange({...props.score, goals: updatedGoals})\n    };\n\n    const onPointsChange = (updatedPoints) => {\n        onScoreChange({...props.score, points: updatedPoints})\n    };\n\n    const onScoreChange = (score) => {\n        props.onScoreChange(score)\n    };\n\n    return (\n        <div className=\"raised-box\">\n            <CenterHeader name={props.name}/>\n            <Row>\n                <Col xs=\"6\" lg=\"4\">\n                    <LargeNumberInput label=\"Goals\" count={goals} edit={props.edit} onCountChange={onGoalsChange}/>\n                </Col>\n                <Col xs=\"6\" lg=\"4\">\n                    <LargeNumberInput label=\"Points\" count={points} edit={props.edit} onCountChange={onPointsChange}/>\n                </Col>\n                <Col xs=\"12\" lg=\"4\">\n                    <LargeNumberInput label=\"Total\" count={calculateScore({points, goals})}/>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n","import React from 'react'\nimport LargeNumberInput from \"../shared/LargeNumberInput\";\nimport CenterHeader from \"../shared/CenterHeader\";\n\nexport default function Quarter(props) {\n\n    const onQuarterChange = (updatedQuarter) => {\n        props.onQuarterChange(updatedQuarter)\n    };\n\n    return (\n        <div className=\"raised-box\">\n            <CenterHeader name=\"Quarter\"/>\n            <LargeNumberInput count={props.quarter} onCountChange={onQuarterChange} edit={props.edit}/>\n        </div>\n    )\n}\n","import React, {useState} from 'react'\nimport {Alert} from \"reactstrap\";\n\nexport default function AppAlert(props) {\n\n    const [visible, setVisible] = useState(true);\n\n    const onDismiss = () => {\n        setVisible(false);\n        props.onDismiss();\n    };\n\n    return (\n        <div>\n            <Alert color={props.color ? props.color : 'danger'} isOpen={visible} toggle={onDismiss}>\n                {props.message}\n            </Alert>\n        </div>\n\n    );\n}\n","import React, {useState, useEffect, useRef} from \"react\";\nimport CenterHeader from \"../shared/CenterHeader\";\nimport {Col, Row} from \"reactstrap\";\nimport {\n  calculateMilliSeconds,\n  calculateMinutes,\n  calculateSeconds, epochTimeNs, getOrDefault, nsToMillis\n} from \"../../lib/utils\";\nimport Button from \"reactstrap/es/Button\";\nimport LargeNumberInput from \"../shared/LargeNumberInput\";\nimport api from \"../../lib/api\";\nimport \"./HurlingTimer.scss\"\n\n// TODO: Implement timer api\nexport default function HurlingTimer() {\n\n  const mounted = useRef(true);\n  const intervalIncrement = 100;\n  const intervalRef = useRef(null);\n  const [timer, updateTimer] = useState({\n    totalMilliSeconds: 0,\n    running: false,\n    seconds: 0,\n    minutes: 0,\n  });\n  const [edit, updateEdit] = useState(false);\n  const [initialized, updateInitialized] = useState(false);\n\n  useEffect(() => {\n    mounted.current = true;\n\n    if (initialized) {\n      return;\n    }\n    api.getTimer().then(timerState => {\n      if (mounted.current) {\n        updateTimerFromState(timerState)\n      }\n    })\n\n    return () => {\n      mounted.current = false\n    }\n  }, [initialized])\n\n  useEffect(() => {\n    // console.log('Component mount');\n    if (timer.running) {\n      startInterval();\n    }\n    return () => {\n      // console.log('Clearing interval...');\n      removeInterval()\n    }\n  }, [timer]);\n\n  const onClickEdit = () => {\n    updateEdit(true);\n  };\n\n  const onClickSave = async () => {\n    updateEdit(false);\n    const timerState = await api.setTimer(\n        {minutes: timer.minutes, seconds: timer.seconds})\n    updateTimerFromState(timerState)\n  };\n\n  const onClickStop = async () => {\n    const timerState = await api.stopTimer()\n    updateTimerFromState(timerState)\n  };\n\n  const onClickStart = async () => {\n    const timerState = await api.startTimer()\n    updateTimerFromState(timerState)\n  };\n\n  const onClickReset = async () => {\n    const timerState = await api.setTimer({minutes: 0, seconds: 0})\n    updateTimerFromState(timerState)\n  };\n\n  const startInterval = () => {\n    console.log('Setting interval...');\n    intervalRef.current = setInterval(incrementMilliSecond, intervalIncrement);\n  };\n\n  const incrementMilliSecond = () => {\n    if (timer.running) {\n      const newTotalMilliSeconds = timer.totalMilliSeconds + intervalIncrement;\n\n      updateTimer({\n        ...timer,\n        totalMilliSeconds: newTotalMilliSeconds,\n        running: timer.running,\n        seconds: calculateSeconds(newTotalMilliSeconds),\n        minutes: calculateMinutes(newTotalMilliSeconds)\n      })\n    }\n  };\n\n  const updateTotal = (minutes, seconds) => {\n    updateTimer({\n      ...timer,\n      totalMilliSeconds: calculateMilliSeconds(minutes, seconds),\n      minutes, seconds\n    })\n  };\n\n  const onChangeSeconds = (seconds) => {\n    updateTotal(timer.minutes, seconds)\n  };\n\n  const onChangeMinutes = (minutes) => {\n    updateTotal(minutes, timer.seconds)\n  };\n\n  const removeInterval = () => {\n    const interval = intervalRef.current;\n    if (!!interval) {\n      clearInterval(interval)\n    }\n  };\n\n  const updateTimerFromState = (state) => {\n    console.debug('Updating timer from state.', state)\n\n    const timerState = new TimerState(state)\n\n    const newTotalMilliSeconds = timerState.calculateTotalMillis()\n    const seconds = calculateSeconds(newTotalMilliSeconds);\n    const minutes = calculateMinutes(newTotalMilliSeconds);\n    const running = timerState.getRunning();\n    console.log(`Timer from state: ${minutes}:${seconds}`)\n    updateTimer({\n      ...timer,\n      totalMilliSeconds: newTotalMilliSeconds,\n      minutes,\n      seconds,\n      running\n    })\n    updateInitialized(true)\n  }\n\n  return (\n      <div className=\"raised-box\">\n        <CenterHeader name=\"Clock\"/>\n        <Row className=\"justify-content-center\">\n          <Col xs=\"2\" className=\"timer-buttons\">\n            {!timer.running && <Button color=\"success\"\n                                       onClick={onClickStart}\n                                       disabled={edit}>Start</Button>}\n            {timer.running && <Button color=\"warning\"\n                                      onClick={onClickStop}>Stop</Button>}\n\n            <Button color=\"danger\" disabled={timer.running}\n                    onClick={onClickReset}>Reset</Button>\n            {!edit && <Button color=\"info\" onClick={onClickEdit}\n                              disabled={timer.running}>Edit</Button>}\n            {edit && <Button color=\"info\"\n                             onClick={onClickSave}>Save</Button>}\n\n\n          </Col>\n          <Col>\n            <Row className=\"justify-content-center\">\n              <Col xs=\"6\" md=\"6\" lg=\"4\" xl=\"3\">\n                {!edit && <LargeNumberInput label=\"Minutes\"\n                                            count={timer.minutes}/>}\n                {edit &&\n                    <LargeNumberInput label=\"Minutes\" count={timer.minutes} edit\n                                      onCountChange={onChangeMinutes}/>}\n              </Col>\n              <Col xs=\"6\" md=\"6\" lg=\"4\" xl=\"3\">\n                {!edit && <LargeNumberInput label=\"Seconds\"\n                                            count={timer.seconds}/>}\n                {edit &&\n                    <LargeNumberInput label=\"Seconds\" count={timer.seconds} edit\n                                      onCountChange={onChangeSeconds}/>}\n\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n\n\n      </div>\n  )\n}\n\nclass TimerState {\n  constructor(state) {\n    this.state = state\n  }\n\n  getRunning() {\n    return this.state.running\n  }\n\n  getOffset() {\n    return getOrDefault(this.state.offset, 0)\n  }\n\n  getStartTime() {\n    return getOrDefault(this.state.start_time, 0)\n  }\n\n  calculateTotalMillis() {\n    if (!this.getRunning()) {\n      return nsToMillis(this.getOffset())\n    }\n    const totalNs = (epochTimeNs() - this.getStartTime()) + this.getOffset();\n\n    console.debug(\"Total Ns: \", totalNs)\n\n    const totalMillis = nsToMillis(\n        (epochTimeNs() - this.getStartTime()) + this.getOffset());\n\n    console.debug(\"Total Millis: \", totalMillis)\n\n    return nsToMillis((epochTimeNs() - this.getStartTime()) + this.getOffset());\n  }\n}\n","import React, {useState, useEffect} from 'react';\nimport {Row} from \"reactstrap\";\nimport Col from \"reactstrap/es/Col\";\nimport HurlingTeam from \"../components/hurling/HurlingTeam\";\nimport '../index.scss'\nimport scoreboard from \"../lib/api\";\nimport Quarter from \"../components/hurling/Quarter\";\nimport {createFullScore, getOrDefault} from \"../lib/utils\";\nimport AppAlert from \"../components/shared/AppAlert\";\nimport HurlingTimer from \"../components/hurling/HurlingTimer\";\n\n//TODO: Fix the string to int conversion\nexport default function HurlingScoreboard(props) {\n\n  const alertLevels = getOrDefault(props.alertLevels, ['danger'])\n  const emptyScore = {\n    goals: 0,\n    points: 0\n  };\n\n  const [homeScore, updateHomeScore] = useState(emptyScore);\n  const [visitorScore, updateVisitorScore] = useState(emptyScore);\n  const [quarter, updateQuarter] = useState(0);\n  const [alert, setAlert] = useState(null);\n  const [status, setStatus] = useState(null)\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    console.log('Getting status')\n    setLoading(true)\n    scoreboard.status().then(statusData => {\n      console.log('Setting status: ', statusData.status)\n      setLoading(false)\n      setStatus(statusData.status)\n    })\n  }, []);\n\n  useEffect(() => {\n    if (isInitialized()) {\n      fetchState().then()\n    }\n\n  }, [status])\n\n  const isInitialized = () => {\n    return status === 'INITIALIZED'\n  }\n\n  const fetchState = async () => {\n    setLoading(true)\n    const result = await scoreboard.getState();\n\n    console.log(\"Result:\", result);\n\n    updateQuarter(result.quarter);\n    updateHomeScore(result.home);\n    updateVisitorScore(result.visitor);\n    setLoading(false)\n  };\n\n  const onHomeScoreChange = (score) => {\n    console.log('Home Score Changed', score);\n    updateHomeScore(score);\n    updateScoreboard({\n      home: {\n        ...createFullScore(score)\n      },\n      visitor: {\n        ...createFullScore(visitorScore)\n      },\n      quarter: quarter\n    });\n  };\n\n  const onVisitorScoreChange = (score) => {\n    updateVisitorScore(score);\n    updateScoreboard({\n      home: {\n        ...createFullScore(homeScore)\n      },\n      visitor: {\n        ...createFullScore(score)\n      },\n      quarter: quarter\n    });\n  };\n\n  const onQuarterChange = (updatedQuarter) => {\n    updateQuarter(updatedQuarter);\n    updateScoreboard({\n      home: {\n        ...createFullScore(homeScore)\n      },\n      visitor: {\n        ...createFullScore(visitorScore)\n      },\n      quarter: updatedQuarter\n    });\n  };\n\n  const updateScoreboard = async (scoreboardObject) => {\n    try {\n      setLoading(true)\n      await scoreboard.setState(scoreboardObject);\n      setLoading(false)\n      createAlert({\n        message: \"Scoreboard updated successfully\",\n        color: \"success\"\n      });\n    } catch (err) {\n      console.error(\"Error while setting scoreboard state\");\n      console.error(err);\n      createAlert({\n        message: \"Error while setting scoreboard state. You touched it last, that means you broke it. Either fix it or blame someone else.\",\n        color:\n            \"danger\"\n      })\n    }\n  };\n\n  const createAlert = (alertData) => {\n    if (alertLevels.indexOf(alertData.color) > -1) {\n      setAlert(alertData)\n      if (alertData.color !== 'danger') {\n        setTimeout(() => {\n          setAlert(null)\n        }, 2000)\n      }\n    }\n  }\n\n  return (\n      <div>\n        {alert && <Row>\n          <Col className=\"col-centered\">\n            <AppAlert message={alert.message} color={alert.color}\n                      onDismiss={() => setAlert(null)}/>\n          </Col>\n        </Row>}\n        {isInitialized() && <Row>\n          <Col xs=\"12\" md=\"6\" lg=\"8\" xl=\"8\">\n            <HurlingTimer/>\n          </Col>\n          <Col xs=\"12\" md=\"6\" lg=\"4\" xl=\"4\" className=\"mt-3 mb-3 col-centered\">\n            <Quarter onQuarterChange={onQuarterChange} quarter={quarter}\n                     edit={!loading}/>\n          </Col>\n        </Row>}\n        {isInitialized() && <Row>\n          <Col sm=\"12\" lg=\"6\" className=\"mt-3\">\n            <HurlingTeam name=\"Home\" score={homeScore}\n                         onScoreChange={onHomeScoreChange} edit={!loading}/>\n          </Col>\n          <Col sm=\"12\" lg=\"6\" className=\"mt-3\">\n            <HurlingTeam name=\"Visitor\" score={visitorScore}\n                         onScoreChange={onVisitorScoreChange} edit={!loading}/>\n          </Col>\n        </Row>}\n        {!isInitialized() &&\n            <Row className=\"justify-content-center\">\n              <Col xs=\"12\" md=\"8\" lg=\"6\" className=\"h6\">\n                Scoreboard is cleared. Click 'New Game' when ready. After a game\n                is complete click 'Clear Scoreboard' to help extend battery\n                life.\n              </Col>\n            </Row>}\n      </div>\n  )\n}\n","import React from 'react'\nimport {Jumbotron} from \"reactstrap\";\n\nexport default function PageNotFound() {\n    return (\n        <Jumbotron>\n            <h1 className=\"display-3\">Page Not Found</h1>\n            <p className=\"lead\">I don't know how you got here, but please leave. Don't let the door hit you on the way out.</p>\n        </Jumbotron>\n    )\n}\n","import React from 'react';\n\nexport default function Help() {\n\n  return (\n      <div>\n        Help Page\n      </div>\n  )\n}\n","import React from 'react';\nimport Container from \"reactstrap/es/Container\";\nimport TopNav from \"../components/shared/TopNav\";\nimport {Route, Switch} from \"react-router\";\nimport HurlingScoreboard from \"./HurlingScoreboard\";\nimport PageNotFound from \"./PageNotFound\";\nimport Help from \"./Help\";\n\nexport default class Root extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            isOpen: false\n        };\n    }\n\n    toggle() {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <TopNav/>\n                <Container fluid>\n                    <Switch>\n                        <Route path=\"/\" component={HurlingScoreboard}/>\n                        <Route path=\"/help\" component={Help}/>\n                        <Route component={PageNotFound}/>\n                    </Switch>\n                </Container>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport Root from \"./pages/Root\";\nimport {Router} from \"react-router\";\nimport {createBrowserHistory} from \"history\";\n\nconst history = createBrowserHistory()\n\nclass App extends Component {\n  render() {\n    return (\n        <Router history={history}>\n          <Root/>\n        </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}