{"version":3,"sources":["constants.js","components/shared/TopNav.jsx","components/shared/CenterHeader.jsx","components/shared/LargeNumberInput.jsx","lib/utils.js","components/hurling/HurlingTeam.jsx","lib/api.js","components/hurling/Quarter.jsx","components/hurling/SaveButton.jsx","components/shared/AppAlert.jsx","components/hurling/HurlingTimer.jsx","pages/HurlingScoreboard.jsx","pages/Games.jsx","pages/BasicScoreboard.jsx","pages/PageNotFound.jsx","pages/Root.jsx","App.jsx","serviceWorker.js","index.js"],"names":["constants","mhcLogo","api","scoreboard","TopNav","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","setState","react_default","a","createElement","className","Navbar","color","light","expand","NavbarBrand","src","width","height","alt","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","tag","Link","to","React","Component","style","textAlign","CenterHeader","importance","name","LargeNumberInput","setCount","count","emitCountChange","onCountChange","label","FormButton","edit","Input","bsSize","type","placeholder","value","readOnly","Button","calculateScore","score","goals","points","createFullScore","objectSpread","total","calculateSeconds","totalSeconds","Math","floor","calculateMinutes","calculateMilliSeconds","minutes","seconds","HurlingTeam","onScoreChange","Row","Col","xs","lg","LargeNumberInput_LargeNumberInput","updatedGoals","updatedPoints","config","headers","Content-Type","getState","_callee","_yield$axios$get","data","regenerator_default","wrap","_context","prev","next","console","log","axios","get","sent","abrupt","stop","post","saveGame","homeTeam","visitorTeam","Quarter","quarter","updatedQuarter","onQuarterChange","SaveButton","position","bottom","right","AppAlert","_useState","useState","_useState2","slicedToArray","visible","setVisible","Alert","onDismiss","message","HurlingTimer","intervalRef","useRef","totalMilliSeconds","running","timer","updateTimer","_useState3","_useState4","updateEdit","incrementMilliSecond","newTotalMilliSeconds","concat","updateTotal","useEffect","current","setInterval","interval","clearInterval","removeInterval","md","xl","disabled","HurlingScoreboard","emptyScore","homeScore","updateHomeScore","visitorScore","updateVisitorScore","_useState5","_useState6","updateQuarter","_useState7","_useState8","_useState9","_useState10","alert","setAlert","fetchState","_ref","asyncToGenerator","mark","result","home","visitor","apply","arguments","updateScoreboard","_ref2","_callee2","scoreboardObject","_context2","t0","error","_x","sm","Games","BasicScoreboard","PageNotFound","Jumbotron","Root","TopNav_TopNav","Container","fluid","react_router","exact","from","path","component","history","createBrowserHistory","App","Root_Root","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.56dc64cd.chunk.js","sourcesContent":["const constants = {\n    mhcLogo: './mhc-logo.png',\n    api: {\n        scoreboard: \"/api/v1.0/scoreboard\"\n    }\n};\n\nexport default constants;\n","import React from 'react';\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink\n} from 'reactstrap';\nimport constants from \"../../constants\";\nimport {Link} from \"react-router-dom\";\n\nexport default class TopNav extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            isOpen: false\n        };\n    }\n    toggle() {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"mb-1\">\n                <Navbar color=\"light\" light expand=\"md\">\n                    <NavbarBrand>\n                        <img src={constants.mhcLogo} width=\"30\" height=\"30\" alt=\"MHC Scoreboard\">\n                        </img>\n                        MHC Scoreboard\n                    </NavbarBrand>\n                    <NavbarToggler onClick={this.toggle}/>\n                    <Collapse isOpen={this.state.isOpen} navbar>\n                        <Nav className=\"ml-auto\" navbar>\n                            <NavItem>\n                                <NavLink tag={Link} to=\"/hurling\">Hurling Scoreboard</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink tag={Link} to=\"/games\">Past Games</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink tag={Link} to=\"scoreboard\">Basic Scoreboard</NavLink>\n                            </NavItem>\n                        </Nav>\n                    </Collapse>\n                </Navbar>\n            </div>\n        );\n    }\n}\n","import React from 'react'\n\nconst style = {\n    textAlign: 'center'\n};\n\nexport default function CenterHeader(props) {\n    switch (props.importance) {\n        case 'h1':\n            return (<h1 style={style}>{props.name}</h1>);\n        case 'h2':\n            return (<h2 style={style}>{props.name}</h2>);\n        case 'h3':\n            return (<h3 style={style}>{props.name}</h3>);\n        case 'h4':\n            return (<h4 style={style}>{props.name}</h4>);\n        case 'h5':\n            return (<h5 style={style}>{props.name}</h5>);\n        case 'h6':\n            return (<h6 style={style}>{props.name}</h6>);\n        default:\n            return (<h1 style={style}>{props.name}</h1>);\n    }\n}\n","import React from \"react\";\nimport {Button, Input} from \"reactstrap\";\nimport './LargeNumberInput.scss'\nimport CenterHeader from \"./CenterHeader\";\n\nexport default function LargeNumberInput(props) {\n\n    const incrementCount = () => {\n        setCount(props.count + 1);\n    };\n\n    const decrementCount = () => {\n        setCount(props.count - 1);\n    };\n\n    const setCount = (count) => {\n        emitCountChange(count);\n    };\n\n    const emitCountChange = (count) => {\n        if (props.onCountChange) {\n            props.onCountChange(count);\n        }\n    };\n\n    return (\n        <div className=\"large-number-wrapper\">\n            {props.label && <CenterHeader importance=\"h3\" name={props.label}/>}\n            <FormButton onClick={incrementCount} edit={props.edit} label=\"+\" color=\"primary\"/>\n            <Input\n                className=\"large-input\"\n                bsSize=\"lg\"\n                type=\"number\"\n                name=\"number\"\n                placeholder=\"number placeholder\"\n                value={props.count}\n                readOnly\n            />\n            <FormButton onClick={decrementCount} edit={props.edit} label=\"-\" color=\"dark\"/>\n        </div>\n    )\n}\n\nfunction FormButton(props) {\n    return (\n        <Button\n            color={props.color ? props.color : 'primary'}\n            onClick={props.onClick}\n            className={\"large-input-button \" + (props.edit ? '' : 'hidden')}>\n            {props.label}\n        </Button>\n    )\n}\n","export const calculateScore = (score) => {\n    return score.goals * 3 + score.points\n};\n\nexport const createFullScore = (score) => {\n    return {\n        ...score,\n        total: calculateScore(score)\n    }\n};\n\nexport const calculateSeconds = (totalSeconds) => {\n    return Math.floor(totalSeconds / 1000) % 60;\n};\n\nexport const calculateMinutes = (totalSeconds) => {\n    return Math.floor(totalSeconds / (60 * 1000));\n};\n\nexport const calculateMilliSeconds = (minutes, seconds) => {\n    return minutes * 60 * 1000 + seconds * 1000\n};\n","import React from 'react'\nimport {Col, Row} from \"reactstrap\";\nimport LargeNumberInput from \"../shared/LargeNumberInput\";\nimport {calculateScore} from \"../../lib/utils\";\nimport CenterHeader from \"../shared/CenterHeader\";\n\nexport default function HurlingTeam(props) {\n    const goals = props.score.goals;\n    const points = props.score.points;\n\n    const onGoalsChange = (updatedGoals) => {\n        onScoreChange({...props.score, goals: updatedGoals})\n    };\n\n    const onPointsChange = (updatedPoints) => {\n        onScoreChange({...props.score, points: updatedPoints})\n    };\n\n    const onScoreChange = (score) => {\n        props.onScoreChange(score)\n    };\n\n    return (\n        <div className=\"raised-box\">\n            <CenterHeader name={props.name}/>\n            <Row>\n                <Col xs=\"6\" lg=\"4\">\n                    <LargeNumberInput label=\"Goals\" count={goals} edit onCountChange={onGoalsChange}/>\n                </Col>\n                <Col xs=\"6\" lg=\"4\">\n                    <LargeNumberInput label=\"Points\" count={points} edit onCountChange={onPointsChange}/>\n                </Col>\n                <Col xs=\"12\" lg=\"4\">\n                    <LargeNumberInput label=\"Total\" count={calculateScore({points, goals})}/>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n","import axios from 'axios';\nimport constants from \"../constants\";\n\nclass ScoreboardApi {\n    config = {\n        headers: {\n            'Content-Type': 'application/json',\n        }\n    };\n\n    getState = async () => {\n        console.log(\"Getting scoreboard state from backend\");\n        const {data} = await axios.get(constants.api.scoreboard, this.config);\n\n        return data;\n    };\n\n    setState = (scoreboard) => {\n        console.log('Setting scoreboard state: ', scoreboard);\n\n        return axios.post(constants.api.scoreboard, scoreboard, this.config);\n    };\n\n    saveGame = (homeTeam, visitorTeam, scoreboard) => {\n\n    };\n}\n\nconst scoreboard = new ScoreboardApi();\n\nexport default scoreboard;\n","import React from 'react'\nimport LargeNumberInput from \"../shared/LargeNumberInput\";\nimport CenterHeader from \"../shared/CenterHeader\";\n\nexport default function Quarter(props) {\n\n    const onQuarterChange = (updatedQuarter) => {\n        props.onQuarterChange(updatedQuarter)\n    };\n\n    return (\n        <div className=\"raised-box\">\n            <CenterHeader name=\"Quarter\"/>\n            <LargeNumberInput count={props.quarter} onCountChange={onQuarterChange} edit/>\n        </div>\n    )\n}\n","import React from 'react'\nimport Button from \"reactstrap/es/Button\";\n\nexport default function SaveButton(props) {\n\n    const style = {\n        position: 'fixed',\n        bottom: '20px',\n        right: '20px',\n        width: '100px'\n    };\n\n    return (\n        <Button style={style} color=\"primary\">\n            Save Game\n        </Button>\n    )\n}\n","import React, {useState} from 'react'\nimport {Alert} from \"reactstrap\";\n\nexport default function AppAlert(props) {\n\n    const [visible, setVisible] = useState(true);\n\n    const onDismiss = () => {\n        setVisible(false);\n        props.onDismiss();\n    };\n\n    return (\n        <div>\n            <Alert color={props.color ? props.color : 'danger'} isOpen={visible} toggle={onDismiss}>\n                {props.message}\n            </Alert>\n        </div>\n\n    );\n}\n","import React, {useState, useEffect, useRef} from \"react\";\nimport CenterHeader from \"../shared/CenterHeader\";\nimport {Col, Row} from \"reactstrap\";\nimport {calculateMilliSeconds, calculateMinutes, calculateSeconds} from \"../../lib/utils\";\nimport Button from \"reactstrap/es/Button\";\nimport LargeNumberInput from \"../shared/LargeNumberInput\";\n\nexport default function HurlingTimer(props) {\n\n    const intervalIncrement = 100;\n    const intervalRef = useRef();\n    const [timer, updateTimer] = useState({\n        totalMilliSeconds: 0,\n        running: false,\n        seconds: 0,\n        minutes: 0\n    });\n    const [edit, updateEdit] = useState(false);\n\n\n    const onClickEdit = () => {\n        updateEdit(true);\n    };\n\n    const onClickSave = () => {\n        updateEdit(false);\n    };\n\n    const onClickStop = () => {\n        updateTimer({\n            ...timer,\n            running: false\n        })\n    };\n\n    const onClickStart = () => {\n        updateTimer({\n            ...timer,\n            running: true\n        })\n    };\n\n    const onClickReset = () => {\n        updateTotal(0, 0)\n    };\n\n    const incrementMilliSecond = () => {\n        if (timer.running) {\n            const newTotalMilliSeconds = timer.totalMilliSeconds + intervalIncrement;\n            const seconds = calculateSeconds(newTotalMilliSeconds);\n            const minutes = calculateMinutes(newTotalMilliSeconds);\n            console.log(`Incrementing seconds: ${minutes}:${seconds}`);\n            console.log(`Previous Millis: ${timer.totalMilliSeconds}, New Millis: ${newTotalMilliSeconds}`)\n\n            updateTimer({\n                totalMilliSeconds: newTotalMilliSeconds,\n                running: timer.running,\n                seconds: calculateSeconds(newTotalMilliSeconds),\n                minutes: calculateMinutes(newTotalMilliSeconds)\n            })\n        }\n    };\n\n    const updateTotal = (minutes, seconds) => {\n        updateTimer({\n            ...timer,\n            totalMilliSeconds: calculateMilliSeconds(minutes, seconds),\n            minutes, seconds\n        })\n    };\n\n    const onChangeSeconds = (seconds) => {\n        updateTotal(timer.minutes, seconds)\n    };\n\n    const onChangeMinutes = (minutes) => {\n        updateTotal(minutes, timer.seconds)\n    };\n\n    const startInterval = () => {\n        console.log('Setting interval...');\n        intervalRef.current = setInterval(incrementMilliSecond, intervalIncrement);\n    };\n\n    const removeInterval = () => {\n        const interval = intervalRef.current;\n        if (!!interval) {\n            clearInterval(interval)\n        }\n    };\n\n    useEffect(() => {\n        console.log('Component mount');\n        if (timer.running) {\n            startInterval();\n        }\n        return () => {\n            console.log('Clearing interval...');\n            removeInterval()\n        }\n    }, [timer]);\n\n    return (\n        <div className=\"raised-box\">\n            <CenterHeader name=\"Clock\"/>\n            <Row className=\"justify-content-center\">\n                <Col xs=\"6\" md=\"6\" lg=\"4\" xl=\"3\">\n                    {!edit && <LargeNumberInput label=\"Minutes\" count={timer.minutes}/>}\n                    {edit &&\n                    <LargeNumberInput label=\"Minutes\" count={timer.minutes} edit onCountChange={onChangeMinutes}/>}\n                </Col>\n                <Col xs=\"6\" md=\"6\" lg=\"4\" xl=\"3\">\n                    {!edit && <LargeNumberInput label=\"Seconds\" count={timer.seconds}/>}\n                    {edit &&\n                    <LargeNumberInput label=\"Seconds\" count={timer.seconds} edit onCountChange={onChangeSeconds}/>}\n\n                </Col>\n            </Row>\n            <Row className=\"justify-content-center\">\n                <Col xs=\"3\" lg=\"2\">\n                    {!timer.running && <Button color=\"success\" onClick={onClickStart} disabled={edit}>Start</Button>}\n                    {timer.running && <Button color=\"warning\" onClick={onClickStop}>Stop</Button>}\n\n                </Col>\n                <Col xs=\"3\" lg=\"2\">\n                    <Button color=\"danger\" disabled={timer.running} onClick={onClickReset}>Reset</Button>\n                </Col>\n                <Col xs=\"3\" lg=\"2\">\n                    {!edit && <Button color=\"info\" onClick={onClickEdit} disabled={timer.running}>Edit</Button>}\n                    {edit && <Button color=\"info\" onClick={onClickSave}>Save</Button>}\n                </Col>\n            </Row>\n        </div>\n    )\n}\n","import React, {useState, useEffect} from 'react';\nimport {Row} from \"reactstrap\";\nimport Col from \"reactstrap/es/Col\";\nimport HurlingTeam from \"../components/hurling/HurlingTeam\";\nimport '../index.scss'\nimport scoreboard from \"../lib/api\";\nimport Quarter from \"../components/hurling/Quarter\";\nimport {createFullScore} from \"../lib/utils\";\nimport SaveButton from \"../components/hurling/SaveButton\";\nimport AppAlert from \"../components/shared/AppAlert\";\nimport HurlingTimer from \"../components/hurling/HurlingTimer\";\n\nexport default function HurlingScoreboard() {\n\n    const emptyScore = {\n        goals: 0,\n        points: 0\n    };\n\n    const initialTimer = {\n        value: 0,\n        running: true\n    };\n\n    const [homeScore, updateHomeScore] = useState(emptyScore);\n    const [visitorScore, updateVisitorScore] = useState(emptyScore);\n    const [quarter, updateQuarter] = useState(0);\n    const [timer, updateTimer] = useState(initialTimer);\n    const [alert, setAlert] = useState(null);\n\n    useEffect(() => {\n        fetchState()\n    }, []);\n\n    const fetchState = async () => {\n        const result = await scoreboard.getState();\n\n        console.log(\"Result:\", result);\n\n        updateQuarter(result.quarter);\n        updateHomeScore(result.home);\n        updateVisitorScore(result.visitor);\n    };\n\n    const onHomeScoreChange = (score) => {\n        console.log('Home Score Changed', score);\n        updateScoreboard({\n            home: {\n                ...createFullScore(score)\n            },\n            visitor: {\n                ...createFullScore(visitorScore)\n            },\n            quarter: quarter\n        });\n        updateHomeScore(score);\n\n    };\n\n    const onVisitorScoreChange = (score) => {\n        updateVisitorScore(score);\n        updateScoreboard({\n            home: {\n                ...createFullScore(homeScore)\n            },\n            visitor: {\n                ...createFullScore(score)\n            },\n            quarter: quarter\n        });\n    };\n\n    const onQuarterChange = (updatedQuarter) => {\n        updateQuarter(updatedQuarter);\n        updateScoreboard({\n            home: {\n                ...createFullScore(homeScore)\n            },\n            visitor: {\n                ...createFullScore(visitorScore)\n            },\n            quarter: updatedQuarter\n        });\n    };\n\n    const updateScoreboard = async (scoreboardObject) => {\n        try {\n            const response = await scoreboard.setState(scoreboardObject);\n            setAlert({\n                message: \"Scoreboard updated successfully\",\n                color: \"success\"\n            });\n        } catch (err) {\n            console.error(\"Error while setting scoreboard state\");\n            console.error(err);\n            setAlert({\n                message: \"Error while setting scoreboard state. You touched it last, that means you broke it. Either fix it or blame someone else.\",\n                color:\n                    \"danger\"\n            })\n        }\n    };\n\n    return (\n        <div>\n            {alert && <Row>\n                <Col className=\"col-centered\">\n                    <AppAlert message={alert.message} color={alert.color} onDismiss={() => setAlert(null)}/>\n                </Col>\n            </Row>}\n            <Row>\n                <Col xs=\"12\" md=\"6\" lg=\"8\" xl=\"8\">\n                    <HurlingTimer timer={timer}/>\n                </Col>\n                <Col xs=\"12\" md=\"6\" lg=\"4\" xl=\"4\" className=\"mt-3 mb-3 col-centered\">\n                    <Quarter onQuarterChange={onQuarterChange} quarter={quarter}/>\n                </Col>\n            </Row>\n            <Row>\n                <Col sm=\"12\" lg=\"6\" className=\"mt-3\">\n                    <HurlingTeam name=\"Home\" score={homeScore} onScoreChange={onHomeScoreChange}/>\n                </Col>\n                <Col sm=\"12\" lg=\"6\" className=\"mt-3\">\n                    <HurlingTeam name=\"Visitor\" score={visitorScore} onScoreChange={onVisitorScoreChange}/>\n                </Col>\n            </Row>\n            <SaveButton/>\n        </div>\n    )\n}\n","import React from 'react';\nexport default function Games() {\n    return (\n        <div>\n            Games\n        </div>\n    )\n}\n","import React  from 'react';\nexport default function BasicScoreboard() {\n    return (\n        <div>\n            Basic Scoreboard\n        </div>\n    )\n}\n","import React from 'react'\nimport {Jumbotron} from \"reactstrap\";\n\nexport default function PageNotFound() {\n    return (\n        <Jumbotron>\n            <h1 className=\"display-3\">Page Not Found</h1>\n            <p className=\"lead\">I don't know how you got here, but please leave. Don't let the door hit you on the way out.</p>\n        </Jumbotron>\n    )\n}\n","import React from 'react';\nimport Container from \"reactstrap/es/Container\";\nimport TopNav from \"../components/shared/TopNav\";\nimport {Redirect, Route, Switch} from \"react-router\";\nimport HurlingScoreboard from \"./HurlingScoreboard\";\nimport Games from \"./Games\";\nimport BasicScoreboard from \"./BasicScoreboard\";\nimport PageNotFound from \"./PageNotFound\";\n\nexport default class Root extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            isOpen: false\n        };\n    }\n\n    toggle() {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <TopNav/>\n                <Container fluid>\n                    <Switch>\n                        <Redirect exact from=\"/\" to=\"/hurling\"/>\n                        <Route path=\"/hurling\" component={HurlingScoreboard}/>\n                        <Route path=\"/games\" component={Games}/>\n                        <Route path=\"/scoreboard\" component={BasicScoreboard}/>\n                        <Route component={PageNotFound}/>\n                    </Switch>\n                </Container>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport Root from \"./pages/Root\";\nimport {Router} from \"react-router\";\nimport {createBrowserHistory} from \"history\";\n\nconst history = createBrowserHistory()\n\nclass App extends Component {\n  render() {\n    return (\n        <Router history={history}>\n          <Root/>\n        </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}